@model PracticaS12.Models.ViewModels.AbonoCreateViewModel
@using System.Linq

@{
    ViewBag.Title = "Registrar Abono";
    Layout = "~/Views/Shared/_Layout.cshtml";

    
    var lista = (Model?.ComprasPendientes ?? new List<System.Web.Mvc.SelectListItem>()).ToList();
    var hayPendientes = lista.Any();
}

<div class="row justify-content-center">
    <div class="col-lg-8">
        <div class="card card-intense">
            <div class="card-header">
                <h5 class="m-0 text-white"><i class="bi bi-wallet2 me-2"></i>Registro de Pago Parcial</h5>
            </div>
            <div class="card-body">
                <div class="text-white small mb-2">Compras pendientes encontradas: <strong class="text-danger">@lista.Count</strong></div>

                @Html.ValidationSummary(false, "", new { @class = "text-danger" })

                @if (!hayPendientes)
                {
                    <div class="alert alert-warning" role="alert">
                        No hay compras <strong>pendientes</strong> (Saldo &gt; 0). Primero crea una compra.
                        <a class="btn btn-sm btn-intense ms-2" href="@Url.Action("Create","Compras")">
                            <i class="bi bi-bag-plus me-1"></i> Crear compra
                        </a>
                    </div>
                }

                @using (Html.BeginForm("Create", "Abonos", FormMethod.Post, new { id = "frmAbono", novalidate = "novalidate", autocomplete = "off" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="mb-3">
                        @Html.Label("IdCompra", "Compra", new { @class = "form-label text-white" })

                        @if (hayPendientes)
                        {
                            @Html.DropDownList(
                                "IdCompra",                            
                                lista,                                
                                "-- Seleccione una compra pendiente --",
                                new { @class = "form-select", id = "ddlCompras", required = "required" }
                            )
                        }
                        else
                        {
                            @Html.DropDownList(
                                "IdCompra",
                                lista,
                                "-- Seleccione una compra pendiente --",
                                new { @class = "form-select", id = "ddlCompras", required = "required", disabled = "disabled" }
                            )
                        }

                        <div class="form-text text-white">Solo se listan compras con <strong>Saldo &gt; 0</strong>.</div>
                        @Html.ValidationMessage("IdCompra", "", new { @class = "text-danger" })
                    </div>

                    <div class="row g-3">
                        <div class="col-md-8">
                            <label class="form-label text-white">Descripción</label>
                            @if (hayPendientes)
                            {
                                <input type="text" id="txtDescripcion" class="form-control" readonly />
                            }
                            else
                            {
                                <input type="text" id="txtDescripcion" class="form-control" readonly disabled="disabled" />
                            }
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(m => m.SaldoAnterior, new { @class = "form-label text-white" })
                            @if (hayPendientes)
                            {
                                @Html.TextBoxFor(m => m.SaldoAnterior, new { @class = "form-control text-end", @readonly = "readonly", id = "txtSaldo" })
                            }
                            else
                            {
                                @Html.TextBoxFor(m => m.SaldoAnterior, new { @class = "form-control text-end", @readonly = "readonly", id = "txtSaldo", disabled = "disabled" })
                            }
                        </div>
                    </div>

                    <div class="mt-3">
                        @Html.LabelFor(m => m.Monto, new { @class = "form-label text-white" })
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-currency-dollar"></i></span>
                            @if (hayPendientes)
                            {
                                @Html.TextBoxFor(m => m.Monto, new { @class = "form-control text-end", type = "number", step = "0.01", min = "0.01", placeholder = "0.00", required = "required", id = "txtMonto" })
                            }
                            else
                            {
                                @Html.TextBoxFor(m => m.Monto, new { @class = "form-control text-end", type = "number", step = "0.01", min = "0.01", placeholder = "0.00", required = "required", id = "txtMonto", disabled = "disabled" })
                            }
                        </div>
                        @Html.ValidationMessageFor(m => m.Monto, "", new { @class = "text-danger" })
                        <div class="form-text text-white">El abono no puede ser mayor que el saldo anterior.</div>
                    </div>

                    <div class="d-flex gap-2 mt-4">
                        @if (hayPendientes)
                        {
                            <button type="submit" class="btn btn-intense">
                                <i class="bi bi-check2-circle me-1"></i> Abonar
                            </button>
                        }
                        else
                        {
                            <button type="submit" class="btn btn-intense" disabled="disabled">
                                <i class="bi bi-check2-circle me-1"></i> Abonar
                            </button>
                        }

                        <a href="@Url.Action("Index","Consulta")" class="btn btn-outline-light">
                            <i class="bi bi-arrow-left"></i> Volver a Consulta
                        </a>
                    </div>
                }
            </div>
        </div>

        <div id="alerta" class="alert alert-danger mt-3 d-none" role="alert">
            <i class="bi bi-exclamation-triangle-fill me-2"></i>
            <span id="alertaMsg">El monto del abono no puede ser mayor que el saldo.</span>
        </div>
    </div>
</div>

@section scripts{
    <script>
    window.APP = window.APP || {};
    APP.urls = { getSaldo: '@Url.Action("GetSaldo","Abonos")' };
    </script>
    <script src="~/Script/abonos-create.js"></script>
}

